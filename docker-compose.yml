version: "3"
services:
  clickhouse:
    build:
      context: build/clickhouse
      dockerfile: dockerfile
      args:
        CLICKHOUSE_VERSION: ${CLICKHOUSE_VERSION}
    container_name: ${CONTAINER_NAME_CLICKHOUSE}
    hostname: ${HOSTNAME_CLICKHOUSE}
    ports:
      - 8123:8123
    networks:
      web:
        ipv4_address:  ${NETWORK_IPV4_ADDRESS_CLICKHOUSE}
    restart: always
  nginx:
    build:
      context: build/nginx
      dockerfile: dockerfile
      args:
        NGINX_VERSION: ${NGINX_VERSION}
    container_name: ${CONTAINER_NAME_NGINX}
    hostname: ${HOSTNAME_NGINX}
    ports:
      - 80:80
    networks:
      web:
        ipv4_address: ${NETWORK_IPV4_ADDRESS_NGINX}
    restart: always
    volumes:
      - ${WEB_DATA_ROOT_DIR}:/data/wwwroot
      - ${WEB_LOG_ROOT_DIR}:/data/wwwlog
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/nginx/vhost:/etc/nginx/vhost
  mysql:
    build:
      context: build/mysql
      dockerfile: dockerfile
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
    container_name: ${CONTAINER_NAME_MYSQL}
    hostname: ${HOSTNAME_MYSQL}
    ports:
      - 3306:3306
    networks:
      web:
        ipv4_address: ${NETWORK_IPV4_ADDRESS_MYSQL}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${MYSQL_DATA_ROOT_DIR}:/var/lib/mysql
  redis:
    build:
      context: build/redis
      dockerfile: dockerfile
      args:
        REDIS_VERSION: ${REDIS_VERSION}
    container_name: ${CONTAINER_NAME_REDIS}
    hostname: ${HOSTNAME_REDIS}
    ports:
      - 6379:6379
    networks:
      web:
        ipv4_address: ${NETWORK_IPV4_ADDRESS_REDIS}
    restart: always
  rabbitmq:
    build:
      context: build/rabbitmq
      dockerfile: dockerfile
      args:
        RABBITMQ_VERSION: ${RABBITMQ_VERSION}
    ports:
      - 15672:15672
    networks:
      web:
        ipv4_address: ${NETWORK_IPV4_ADDRESS_RABBITMQ}
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    restart: always
  mongodb:
    build:
      context: build/mongodb
      dockerfile: dockerfile
      args:
        MONGODB_VERSION: ${MONGODB_VERSION}
    restart: always
    ports:
      - 27017:27017
    networks:
      web:
        ipv4_address: ${NETWORK_IPV4_ADDRESS_MONGODB}
    container_name: ${CONTAINER_NAME_MONGODB}
    hostname: ${HOSTNAME_MONGODB}
    volumes:
      - ${MONGODB_DATA_ROOT_DIR}:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  php:
    build:
      context: build/php
      dockerfile: dockerfile
      args:
        PHP_FPM_VERSION: ${PHP_FPM_VERSION}
    container_name: ${CONTAINER_NAME_PHP}
    hostname: ${HOSTNAME_PHP}
    ports:
      - 9001:9001
    networks:
      web:
        ipv4_address:  ${NETWORK_IPV4_ADDRESS_PHP}
    restart: always
    volumes:
      - ${WEB_DATA_ROOT_DIR}:/data/wwwroot
      - ${WEB_LOG_ROOT_DIR}:/data/wwwlog
      - ./conf/hosts:/etc/hosts
      - ./conf/php/extend.ini:/usr/local/etc/php/conf.d/extend.ini
networks:
  web:
    driver: ${NETWORK_WEB_DEFAULT_DRIVER}
    ipam:
      config:
        -
          subnet: ${NETWORK_WEB_SUBNET}