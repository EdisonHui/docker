version: "3"
services:
  php:
    build:
      context: dockerfile/php
      dockerfile: dockerfile
      args:
        PHP_VERSION: 7.2
        PHPREDIS_VERSION: 4.3.0
        XDEBUG_VERSION: 2.7.0
        AMQP_VERSION: 1.9.4
        MCRYPT_VERSION: 1.0.2
        MONGODB_VERSION: 1.5.3
        PHALCON_VERSION: 3.4.3
        SWOOLE_VERSION: 4.3.1
        PHPUNIT_VERSION: 7
    container_name: php
    hostname: php
    ports:
      - 9000:9000
    networks:
      web:
        ipv4_address:  172.16.238.9
    restart: always
    volumes:
      - ${DOCUMENT_ROOT}:/data/htdocs
      - ./conf/hosts:/etc/hosts:rw
  nginx:
    build:
      context: dockerfile/nginx
      dockerfile: dockerfile
    container_name: nginx
    hostname: nginx
    ports:
      - 80:80
    networks:
      web:
        ipv4_address:  172.16.238.8
    restart: always
    volumes:
      - ${DOCUMENT_ROOT}:/data/htdocs
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/nginx/vhost:/etc/nginx/vhost
    depends_on:
      - php
  mysql:
    build:
      context: dockerfile/mysql
      dockerfile: dockerfile
      args:
        MYSQL_VERSION: 5.7
    container_name: mysql
    hostname: mysql
    ports:
      - 3306:3306
    networks:
      web:
        ipv4_address:  172.16.238.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
    volumes:
      - ${MYSQL_DATA_ROOT}:/var/lib/mysql
  phpmyadmin:
    build:
      context: ./dockerfile/phpmyadmin
      dockerfile: dockerfile
    ports:
      - 8080:80
    networks:
      web:
        ipv4_address:  172.16.238.6
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
    container_name: phpmyadmin
    hostname: phpmyadmin
    restart: always
  redis:
    build:
      context: ./dockerfile/redis
      dockerfile: dockerfile
      args:
        REDIS_VERSION: 4
    ports:
      - 6379:6379
    container_name: redis
    hostname: redis
    networks:
      web:
        ipv4_address:  172.16.238.5
    restart: always
  rabbitmq:
    build:
      context: ./dockerfile/rabbitmq
      dockerfile: dockerfile
      args:
        RABBITMQ_VERSION: 3.7
    ports:
      - 15672:15672
    networks:
      web:
        ipv4_address:  172.16.238.4
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    restart: always
  mongo:
    build:
      context: ./dockerfile/mongo
      dockerfile: dockerfile
      args:
        MONGO_VERSION: 4.0.6
    restart: always
    networks:
      web:
        ipv4_address:  172.16.238.3
    container_name: mongo
    hostname: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
  mongoexpress:
    build:
      context: ./dockerfile/mongoexpress
      dockerfile: dockerfile
      args:
        MONGO_EXPRESS_VERSION: latest
    restart: always
    networks:
      web:
        ipv4_address:  172.16.238.2
    ports:
      - 8081:8081
    container_name: mongoexpress
    hostname: mongoexpress
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
networks:
  web:
    driver: bridge
    ipam:
      config:
        -
          subnet: 172.16.238.0/24